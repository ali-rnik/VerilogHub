<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="2.15.0" version="1.0">
This file is intended to be loaded by Logisim-evolution (https://github.com/reds-heig/logisim-evolution).
<lib desc="#Wiring" name="0"/>
  <lib desc="#Gates" name="1"/>
  <lib desc="#Plexers" name="2">
    <tool name="Multiplexer">
      <a name="enable" val="false"/>
    </tool>
    <tool name="Demultiplexer">
      <a name="enable" val="false"/>
    </tool>
  </lib>
  <lib desc="#Arithmetic" name="3"/>
  <lib desc="#Memory" name="4">
    <tool name="ROM">
      <a name="contents">addr/data: 8 8
0
</a>
    </tool>
  </lib>
  <lib desc="#I/O" name="5"/>
  <lib desc="#TTL" name="6"/>
  <lib desc="#HDL-IP" name="7">
    <tool name="VHDL Entity">
      <a name="content">--------------------------------------------------------------------------------
-- HEIG-VD, institute REDS, 1400 Yverdon-les-Bains
-- Project :
-- File    :
-- Autor   :
-- Date    :
--
--------------------------------------------------------------------------------
-- Description :
--
--------------------------------------------------------------------------------

library ieee;
  use ieee.std_logic_1164.all;
  --use ieee.numeric_std.all;

entity VHDL_Component is
  port(
  ------------------------------------------------------------------------------
  --Insert input ports below
    horloge_i  : in  std_logic;                    -- input bit example
    val_i      : in  std_logic_vector(3 downto 0); -- input vector example
  ------------------------------------------------------------------------------
  --Insert output ports below
    max_o      : out std_logic;                    -- output bit example
    cpt_o      : out std_logic_vector(3 downto 0)  -- output vector example
    );
end VHDL_Component;

--------------------------------------------------------------------------------
--Complete your VHDL description below
architecture type_architecture of VHDL_Component is


begin


end type_architecture;
</a>
    </tool>
  </lib>
  <lib desc="#TCL" name="8">
    <tool name="TclGeneric">
      <a name="content">library ieee;
use ieee.std_logic_1164.all;

entity TCL_Generic is
  port(
    --Insert input ports below
    horloge_i  : in  std_logic;                    -- input bit example
    val_i      : in  std_logic_vector(3 downto 0); -- input vector example

	  --Insert output ports below
    max_o      : out std_logic;                    -- output bit example
    cpt_o      : out std_logic_Vector(3 downto 0)  -- output vector example
  );
end TCL_Generic;
</a>
    </tool>
  </lib>
  <lib desc="#Base" name="9">
    <tool name="Text Tool">
      <a name="text" val=""/>
      <a name="font" val="SansSerif plain 12"/>
      <a name="halign" val="center"/>
      <a name="valign" val="base"/>
    </tool>
  </lib>
  <lib desc="#BFH-Praktika" name="10"/>
  <lib desc="#Logisim ITA components" name="11"/>
  <main name="main"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
    <a name="tickmain" val="half_period"/>
  </options>
  <mappings>
    <tool lib="9" map="Button2" name="Menu Tool"/>
    <tool lib="9" map="Button3" name="Menu Tool"/>
    <tool lib="9" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="9" name="Poke Tool"/>
    <tool lib="9" name="Edit Tool"/>
    <tool lib="9" name="Text Tool">
      <a name="text" val=""/>
      <a name="font" val="SansSerif plain 12"/>
      <a name="halign" val="center"/>
      <a name="valign" val="base"/>
    </tool>
    <sep/>
    <tool lib="0" name="Pin"/>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </tool>
    <tool lib="1" name="NOT Gate">
      <a name="size" val="20"/>
    </tool>
    <tool lib="1" name="AND Gate">
      <a name="size" val="30"/>
    </tool>
    <tool lib="1" name="OR Gate">
      <a name="size" val="30"/>
    </tool>
  </toolbar>
  <circuit name="main">
    <a name="circuit" val="main"/>
    <a name="clabel" val=""/>
    <a name="clabelup" val="east"/>
    <a name="clabelfont" val="SansSerif bold 16"/>
    <a name="circuitnamedbox" val="true"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="circuitvhdlpath" val=""/>
    <wire from="(300,100)" to="(360,100)"/>
    <wire from="(190,170)" to="(510,170)"/>
    <wire from="(130,90)" to="(190,90)"/>
    <wire from="(180,120)" to="(240,120)"/>
    <wire from="(130,90)" to="(130,100)"/>
    <wire from="(130,100)" to="(130,110)"/>
    <wire from="(330,50)" to="(380,50)"/>
    <wire from="(330,130)" to="(380,130)"/>
    <wire from="(190,140)" to="(240,140)"/>
    <wire from="(340,40)" to="(340,60)"/>
    <wire from="(450,100)" to="(450,120)"/>
    <wire from="(450,60)" to="(450,80)"/>
    <wire from="(330,50)" to="(330,130)"/>
    <wire from="(510,90)" to="(510,170)"/>
    <wire from="(300,100)" to="(300,130)"/>
    <wire from="(220,80)" to="(260,80)"/>
    <wire from="(330,130)" to="(330,160)"/>
    <wire from="(190,140)" to="(190,170)"/>
    <wire from="(120,130)" to="(150,130)"/>
    <wire from="(120,40)" to="(340,40)"/>
    <wire from="(270,130)" to="(300,130)"/>
    <wire from="(340,120)" to="(360,120)"/>
    <wire from="(340,60)" to="(360,60)"/>
    <wire from="(390,70)" to="(410,70)"/>
    <wire from="(390,110)" to="(410,110)"/>
    <wire from="(450,100)" to="(470,100)"/>
    <wire from="(450,80)" to="(470,80)"/>
    <wire from="(130,110)" to="(150,110)"/>
    <wire from="(120,160)" to="(330,160)"/>
    <wire from="(440,60)" to="(450,60)"/>
    <wire from="(440,120)" to="(450,120)"/>
    <wire from="(400,50)" to="(410,50)"/>
    <wire from="(400,130)" to="(410,130)"/>
    <wire from="(500,90)" to="(510,90)"/>
    <wire from="(280,80)" to="(360,80)"/>
    <wire from="(120,100)" to="(130,100)"/>
    <wire from="(340,60)" to="(340,120)"/>
    <wire from="(120,70)" to="(190,70)"/>
    <comp lib="1" loc="(440,120)" name="AND Gate">
      <a name="size" val="30"/>
    </comp>
    <comp lib="1" loc="(400,50)" name="NOT Gate">
      <a name="size" val="20"/>
    </comp>
    <comp lib="1" loc="(180,120)" name="AND Gate">
      <a name="size" val="30"/>
    </comp>
    <comp lib="1" loc="(270,130)" name="OR Gate">
      <a name="size" val="30"/>
    </comp>
    <comp lib="1" loc="(390,110)" name="OR Gate">
      <a name="size" val="30"/>
    </comp>
    <comp lib="1" loc="(280,80)" name="NOT Gate">
      <a name="size" val="20"/>
    </comp>
    <comp lib="1" loc="(400,130)" name="NOT Gate">
      <a name="size" val="20"/>
    </comp>
    <comp lib="1" loc="(440,60)" name="AND Gate">
      <a name="size" val="30"/>
    </comp>
    <comp lib="1" loc="(500,90)" name="AND Gate">
      <a name="size" val="30"/>
    </comp>
    <comp lib="1" loc="(220,80)" name="AND Gate">
      <a name="size" val="30"/>
    </comp>
    <comp lib="1" loc="(390,70)" name="OR Gate">
      <a name="size" val="30"/>
    </comp>
    <comp lib="0" loc="(120,100)" name="Pin">
      <a name="label" val="enable"/>
    </comp>
    <comp lib="0" loc="(120,40)" name="Pin">
      <a name="label" val="preset"/>
    </comp>
    <comp lib="0" loc="(120,70)" name="Pin">
      <a name="label" val="reset"/>
    </comp>
    <comp lib="0" loc="(120,130)" name="Pin">
      <a name="label" val="set"/>
    </comp>
    <comp lib="0" loc="(120,160)" name="Pin">
      <a name="label" val="clear"/>
    </comp>
  </circuit>
</project>
