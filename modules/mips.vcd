$version Generated by VerilatedVcd $end
$date Fri Feb  7 18:12:39 2020
 $end
$timescale   1ns $end

 $scope module TOP $end
  $var wire  1 1 clk $end
  $var wire  1 2 z $end
  $scope module mips $end
   $var wire  1 1 clk $end
   $var wire 16 / w1 [15:0] $end
   $var wire 16 0 w2 [15:0] $end
   $var wire 64 # w3 [63:0] $end
   $var wire 64 % w4 [63:0] $end
   $var wire 64 ' w5 [63:0] $end
   $var wire 64 ) w6 [63:0] $end
   $var wire  1 2 z $end
   $scope module ADDER $end
    $var wire 16 0 in_A [15:0] $end
    $var wire 16 3 in_B [15:0] $end
    $var wire 16 / out [15:0] $end
   $upscope $end
   $scope module ALU $end
    $var wire  3 . control [2:0] $end
    $var wire 64 ' in_A [63:0] $end
    $var wire 64 ) in_B [63:0] $end
    $var wire 64 % out [63:0] $end
    $var wire  1 2 zero $end
   $upscope $end
   $scope module INS_MEM $end
    $var wire 16 0 adr [15:0] $end
    $var wire  1 6 clk $end
    $var wire 64 # readData [63:0] $end
    $var wire 64 4 writeData [63:0] $end
    $var wire  1 6 writeEn $end
   $upscope $end
   $scope module PC $end
    $var wire 16 / adr_in [15:0] $end
    $var wire 16 0 adr_out [15:0] $end
    $var wire  1 1 clk $end
    $var wire 16 0 data [15:0] $end
   $upscope $end
   $scope module REG_FILE $end
    $var wire  1 1 clk $end
    $var wire  6 + readAdr1 [5:0] $end
    $var wire  6 , readAdr2 [5:0] $end
    $var wire 64 ' readData1 [63:0] $end
    $var wire 64 ) readData2 [63:0] $end
    $var wire  6 - writeAdr [5:0] $end
    $var wire 64 % writeData [63:0] $end
    $var wire  1 7 writeEnable $end
    $scope module unnamedblk1 $end
     $var wire 32 8 i [31:0] $end
    $upscope $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#1
b0000000000000000000000000000000000000000000010000001000011000000 #
b0000000000000000000000000000000000000000000000000000000000011111 %
b0000000000000000000000000000000000000000000000000000000000011000 '
b0000000000000000000000000000000000000000000000000000000000000111 )
b000001 +
b000010 ,
b000011 -
b000 .
b0000000000000001 /
b0000000000000000 0
11
02
b0000000000000001 3
b0000000000000000000000000000000000000000000000000000000000000000 4
06
17
b00000000000000000000000000000100 8
#2
01
#3
b0000000000000000000000000000000000000000000010000011000001000000 #
b0000000000000000000000000000000000000000000000000000000000100110 %
b0000000000000000000000000000000000000000000000000000000000011111 '
b000011 +
b000001 -
b0000000000000010 /
b0000000000000001 0
11
#4
01
#5
b0000000000000000000000000000000000000000000000000000000000000000 #
b0000000000000000000000000000000000000000000000000000000000000000 %
b0000000000000000000000000000000000000000000000000000000000000000 '
b0000000000000000000000000000000000000000000000000000000000000000 )
b000000 +
b000000 ,
b000000 -
b0000000000000011 /
b0000000000000010 0
11
12
#6
01
#7
b0000000000000100 /
b0000000000000011 0
11
#8
01
#9
b0000000000000101 /
b0000000000000100 0
11
#10
01
